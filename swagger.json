{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "GoIT Final project",
    "description": "GoIT Final team project",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [{ "url": "http://localhost:3000" }],
  "tags": [
    {
      "name": "Users",
      "description": "Users endpoints"
    },
    {
      "name": "Notices",
      "description": "Notices endpoints"
    },
    {
      "name": "Pets",
      "description": "Endpoints for user's pets"
    },
    {
      "name": "Friends",
      "description": "Friends endpoints"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": " New user registration",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    }
  },

  "/pets": {
    "patch": {
      "tags": ["Pets"],
      "summary": "Add new pet",
      "security": [{ "Bearer": [] }],
      "produces": ["application/json"],
      "requestBody": {
        "description": "Pet data",
        "required": true,
        "content": {
          "multipart/form-data": {
            "schema": {
              "$ref": "#/components/schemas/PetRequest"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Your pet was succesfully added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PetResponse"
              }
            }
          }
        },
        "401": {
          "description": "Not authorized",
          "content": {
            "application/json": {
              "examaple": {
                "message": "Invalid token"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error"
        }
      }
    }
  },
  "/pets/delete/{id}": {
    "patch": {
      "tags": ["Pets"],
      "summary": "Delete pet by id",
      "security": [{ "Bearer": [] }],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Pet was removed from your account",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Your pet was removed from your account",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteResponse"
              }
            }
          }
        },
        "401": {
          "description": "Not authorized"
        },
        "404": {
          "description": "pet wasn't found"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "userId": {
              "type": "string",
              "description": "User's id",
              "example": "32143232436545474"
            }
          }
        },
        "example": [
          { "email": "1@gmail.com", "userId": "1" },
          { "email": "2@gmail.com", "userId": "2" }
        ]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
